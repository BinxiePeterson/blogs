{"title":"Writing a dataframe to a Postgres database via RStudio","markdown":{"yaml":{"title":"Writing a dataframe to a Postgres database via RStudio","author":"Bianca Peterson","date":"2023-06-05","categories":["database","SQL"],"image":"thumbnail.jpg"},"headingText":"Launch a Postgres database","containsRefs":false,"markdown":"\n\nThe following post will demonstrate how you can connect to a PostgreSQL (also called Postgres) database via RStudio and write the dataframe to a Postgres table.\n\n\nYou can download PostgreSQL as a ready-to-use package for your operating system from [this page](https://www.postgresql.org/download/).\n\nAlternatively, you can use the postgres docker image to create your own PostgreSQL database:\n\n1.  Download and install [Docker](https://docs.docker.com/engine/install/).\n\n2.  Pull the Postgres Docker Official Image from Dockerhub by running the following command in your terminal:\n\n    ```{bash}\n    #| eval: false\n    docker pull postgres\n    ```\n\n3.  Start a Postgres instance by running the following command in your terminal:\n\n    ```{bash}\n    #| eval: false\n    docker run --name mytestdb -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres\n    ```\n\n`--rm` will remove the container when it is stopped.\n\n`-d` will run the container in 'detatched' mode, allowing you to use the same terminal window for other tasks.\n\n`-e` passes an environment variable, like the database password.\n\n`--name` gives the container a name when you run it.\n\n`-p` maps port 5432 on the container to the host port 5432.\n\nIf there is already another process occupying port `5432` on your computer, you change the port to `5433:5432`, for example.\n\n### Define database credentials\n\nIn RStudio, choose `New Blank File` and create a `.Renviron` file within your current working directory. Inside this `.Renviron` file, specify the database credentials from the previous section:\n\n``` bash\nDB_HOST=\"localhost\"\nDB_PORT=\"5432\"\nDB_USER=\"postgres\"\nDB_PASSWORD=\"mysecretpassword\"\nDB_DATABASE=\"mytestdb\"\n```\n\n### Connect to the Postgres database\n\nInside an R script, load your libraries and connect to the database:\n\n```{r}\n#| eval: false\n# Load libraries.\nlibrary(DBI)\nlibrary(RPostgreSQL)\n\n# Establish a connection to your PostgreSQL database.\ncon <- dbConnect(\n  drv = dbDriver(\"PostgreSQL\"),\n  dbname = Sys.getenv(\"DB_DATABASE\"),\n  host = Sys.getenv(\"DB_HOST\"),\n  port = Sys.getenv(\"DB_PORT\"),\n  user = Sys.getenv(\"DB_USER\"),\n  password = Sys.getenv(\"DB_PASSWORD\")\n)\n```\n\n### Prepare data for the Postgres database\n\nYou will need to make variable names database safe, which means that names must:\n\n-   contain only letters (a-z, A-Z), numbers (0-9), or underscores (\\_);\n\n-   begin with a letter or underscore (not a number);\n\n-   be lower case and unique; and\n\n-   be less then 59 characters.\n\nTo clean up the variable names, you can make use of the following function:\n\n```{r}\n#| eval: false\n# Custom function to format variable names.\nformat_names <- function(names) {\n  names <- gsub(pattern = '[^a-z0-9]+',\n                replacement = '_', tolower(names))\n  names <- make.names(names, unique=TRUE, allow_=TRUE)\n  names <- gsub('.','_', names, fixed=TRUE)\n  names\n}\n\n# Use custom function to format variable names.\ncolnames(my_data) <- format_names(colnames(mydata))\n```\n\n### Write the dataframe to a table in the Postgres database\n\n```{r}\n#| eval: false\ndbWriteTable(conn = con,\n             name = \"cars\",\n             value = my_data,\n             overwrite = TRUE)\n```\n\n`name` specifies the name of the table (e.g. `cars`);\n\n`value` specifies which dataframe to write to a table.\n\nIf you don't want to overwrite an existing table, use the option `append = TRUE`.\n\n### Query the Postgres database\n\nYou can return an entire table from the Postgres database by running the following in R:\n\n```{r}\n#| eval: false\nmy_data <- dbReadTable(con, \"cars\")\n```\n\nOr you could use an SQL query to extract subsets of data:\n\n```{r}\n#| eval: false\nmy_subset <- dbGetQuery(con, \"select column1, column2 from cars\")\n```\n\n### Close the database connection\n\n```{r}\n#| eval: false\ndbDisconnect(con)\n```\n\n","srcMarkdownNoYaml":"\n\nThe following post will demonstrate how you can connect to a PostgreSQL (also called Postgres) database via RStudio and write the dataframe to a Postgres table.\n\n### Launch a Postgres database\n\nYou can download PostgreSQL as a ready-to-use package for your operating system from [this page](https://www.postgresql.org/download/).\n\nAlternatively, you can use the postgres docker image to create your own PostgreSQL database:\n\n1.  Download and install [Docker](https://docs.docker.com/engine/install/).\n\n2.  Pull the Postgres Docker Official Image from Dockerhub by running the following command in your terminal:\n\n    ```{bash}\n    #| eval: false\n    docker pull postgres\n    ```\n\n3.  Start a Postgres instance by running the following command in your terminal:\n\n    ```{bash}\n    #| eval: false\n    docker run --name mytestdb -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres\n    ```\n\n`--rm` will remove the container when it is stopped.\n\n`-d` will run the container in 'detatched' mode, allowing you to use the same terminal window for other tasks.\n\n`-e` passes an environment variable, like the database password.\n\n`--name` gives the container a name when you run it.\n\n`-p` maps port 5432 on the container to the host port 5432.\n\nIf there is already another process occupying port `5432` on your computer, you change the port to `5433:5432`, for example.\n\n### Define database credentials\n\nIn RStudio, choose `New Blank File` and create a `.Renviron` file within your current working directory. Inside this `.Renviron` file, specify the database credentials from the previous section:\n\n``` bash\nDB_HOST=\"localhost\"\nDB_PORT=\"5432\"\nDB_USER=\"postgres\"\nDB_PASSWORD=\"mysecretpassword\"\nDB_DATABASE=\"mytestdb\"\n```\n\n### Connect to the Postgres database\n\nInside an R script, load your libraries and connect to the database:\n\n```{r}\n#| eval: false\n# Load libraries.\nlibrary(DBI)\nlibrary(RPostgreSQL)\n\n# Establish a connection to your PostgreSQL database.\ncon <- dbConnect(\n  drv = dbDriver(\"PostgreSQL\"),\n  dbname = Sys.getenv(\"DB_DATABASE\"),\n  host = Sys.getenv(\"DB_HOST\"),\n  port = Sys.getenv(\"DB_PORT\"),\n  user = Sys.getenv(\"DB_USER\"),\n  password = Sys.getenv(\"DB_PASSWORD\")\n)\n```\n\n### Prepare data for the Postgres database\n\nYou will need to make variable names database safe, which means that names must:\n\n-   contain only letters (a-z, A-Z), numbers (0-9), or underscores (\\_);\n\n-   begin with a letter or underscore (not a number);\n\n-   be lower case and unique; and\n\n-   be less then 59 characters.\n\nTo clean up the variable names, you can make use of the following function:\n\n```{r}\n#| eval: false\n# Custom function to format variable names.\nformat_names <- function(names) {\n  names <- gsub(pattern = '[^a-z0-9]+',\n                replacement = '_', tolower(names))\n  names <- make.names(names, unique=TRUE, allow_=TRUE)\n  names <- gsub('.','_', names, fixed=TRUE)\n  names\n}\n\n# Use custom function to format variable names.\ncolnames(my_data) <- format_names(colnames(mydata))\n```\n\n### Write the dataframe to a table in the Postgres database\n\n```{r}\n#| eval: false\ndbWriteTable(conn = con,\n             name = \"cars\",\n             value = my_data,\n             overwrite = TRUE)\n```\n\n`name` specifies the name of the table (e.g. `cars`);\n\n`value` specifies which dataframe to write to a table.\n\nIf you don't want to overwrite an existing table, use the option `append = TRUE`.\n\n### Query the Postgres database\n\nYou can return an entire table from the Postgres database by running the following in R:\n\n```{r}\n#| eval: false\nmy_data <- dbReadTable(con, \"cars\")\n```\n\nOr you could use an SQL query to extract subsets of data:\n\n```{r}\n#| eval: false\nmy_subset <- dbGetQuery(con, \"select column1, column2 from cars\")\n```\n\n### Close the database connection\n\n```{r}\n#| eval: false\ndbDisconnect(con)\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.336","editor":"visual","theme":"cosmo","title-block-banner":true,"title":"Writing a dataframe to a Postgres database via RStudio","author":"Bianca Peterson","date":"2023-06-05","categories":["database","SQL"],"image":"thumbnail.jpg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}